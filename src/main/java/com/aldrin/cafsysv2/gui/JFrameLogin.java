/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.aldrin.cafsysv2.gui;

import com.aldrin.cafsysv2.dao.impl.UserAccountDAOImpl;
import com.aldrin.cafsysv2.model.Role;
import com.aldrin.cafsysv2.model.UserAccount;
import com.aldrin.cafsysv2.util.LoginUser;
import com.formdev.flatlaf.FlatClientProperties;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import java.awt.event.KeyEvent;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

/**
 *
 * @author Java Programming with Aldrin
 */
@Setter
@Getter
@ToString
public class JFrameLogin extends javax.swing.JFrame {

    /**
     * Creates new form JFrameLogin
     */
    public JFrameLogin() {
        initComponents();
        FlatSVGIcon icon = new FlatSVGIcon("svg/recipe.svg", 16, 16);
        setIconImage(icon.getImage());
        jTextFieldUsername.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Username");
        jPasswordFieldPassword.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Password");

        //clear button
        jTextFieldUsername.putClientProperty(FlatClientProperties.TEXT_FIELD_SHOW_CLEAR_BUTTON, true);
        jTextFieldUsername.putClientProperty(FlatClientProperties.TEXT_FIELD_LEADING_ICON, new FlatSVGIcon("svg/user.svg", 24, 24));

        //reveal button
        jPasswordFieldPassword.putClientProperty(FlatClientProperties.STYLE, "showRevealButton:true;" + "showCapsLock:true");
        jPasswordFieldPassword.putClientProperty(FlatClientProperties.TEXT_FIELD_LEADING_ICON, new FlatSVGIcon("svg/key.svg", 24, 24));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldUsername = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPasswordFieldPassword = new javax.swing.JPasswordField();
        jButtonLogin = new javax.swing.JButton();
        jLabelErrorMessage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextFieldUsername.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextFieldUsername.setForeground(new java.awt.Color(51, 51, 51));
        getContentPane().add(jTextFieldUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 100, 410, 30));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Username");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 80, 93, 20));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Password");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 140, 93, 20));

        jPasswordFieldPassword.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPasswordFieldPassword.setForeground(new java.awt.Color(51, 51, 51));
        jPasswordFieldPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPasswordFieldPasswordKeyPressed(evt);
            }
        });
        getContentPane().add(jPasswordFieldPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 160, 410, 30));

        jButtonLogin.setBackground(new java.awt.Color(4, 170, 109));
        jButtonLogin.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonLogin.setIcon(new FlatSVGIcon("svg/login.svg",24,24));
        jButtonLogin.setText("Login");
        jButtonLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoginActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 210, 409, 35));

        jLabelErrorMessage.setForeground(new java.awt.Color(153, 0, 0));
        jLabelErrorMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jLabelErrorMessage, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 30, 410, 30));

        setSize(new java.awt.Dimension(437, 297));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoginActionPerformed
        userAccessAccount();
    }//GEN-LAST:event_jButtonLoginActionPerformed

    private void jPasswordFieldPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordFieldPasswordKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            userAccessAccount();
        }
    }//GEN-LAST:event_jPasswordFieldPasswordKeyPressed

//    public void addLoingListener(ActionListener listener) {
//        jButtonLogin.addActionListener(listener);
//    }
//
//    public void addLoginKeyListener(KeyAdapter keyAdapter) {
//        jPasswordFieldPassword.addKeyListener(keyAdapter);
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonLogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelErrorMessage;
    private javax.swing.JPasswordField jPasswordFieldPassword;
    private javax.swing.JTextField jTextFieldUsername;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the jTextFieldUsername
     */
    public javax.swing.JTextField getjTextFieldUsername() {
        return jTextFieldUsername;
    }

    /**
     * @param jTextFieldUsername the jTextFieldUsername to set
     */
    public void setjTextFieldUsername(javax.swing.JTextField jTextFieldUsername) {
        this.jTextFieldUsername = jTextFieldUsername;
    }

    /**
     * @return the jPasswordFieldPassword
     */
    public javax.swing.JPasswordField getjPasswordFieldPassword() {
        return jPasswordFieldPassword;
    }

    /**
     * @param jPasswordFieldPassword the jPasswordFieldPassword to set
     */
    public void setjPasswordFieldPassword(javax.swing.JPasswordField jPasswordFieldPassword) {
        this.jPasswordFieldPassword = jPasswordFieldPassword;
    }

    private void userAccessAccount() {
        LoginUser loginUser = new LoginUser();
        loginUser.setUserAccount(null);
        UserAccountDAOImpl userDAOImpl = new UserAccountDAOImpl();
        UserAccount user = new UserAccount();
        user.setUsername(jTextFieldUsername.getText());
        user.setPassword(jPasswordFieldPassword.getText());
        user = userDAOImpl.loginUserAccount(user);
        if (user != null) {
            loginRole(user.getRole());
            dispose();
            JFrameCafSys cafsys = new JFrameCafSys();
            cafsys.setVisible(true);    
        } else {
            jLabelErrorMessage.setText("Please check your username and password and try again.");
            jTextFieldUsername.putClientProperty("JComponent.outline", "error");
            jPasswordFieldPassword.putClientProperty("JComponent.outline", "error");
        }
    }
    
    
        private void loginRole(Role r) {
        String role = r.getRole();
        switch (role) {
            case "ADMIN":
//                jFrameCafSysv2.getjMenuManage().setVisible(true);
//                jFrameCafSysv2.getjMenuSetting().setVisible(true);
//                jFrameCafSysv2.getjButtonStockIn().setVisible(true);
                break;
            case "USER":
//                jFrameCafSysv2.getjMenuManage().setVisible(false);
//                jFrameCafSysv2.getjMenuSetting().setVisible(false);
//                jFrameCafSysv2.getjButtonStockIn().setVisible(false);
                break;
            default:
                throw new AssertionError();
        }
    }
}
